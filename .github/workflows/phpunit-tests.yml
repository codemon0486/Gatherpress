name: PHPUnit Tests
on:
  push:
    branches:
      - main
      - develop
      - feature/GP-182
  pull_request:

jobs:
  test-php:
    name: ${{ matrix.php_versions }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        php_versions: [ '8.0', '7.4', '7.3' ]
    env:
      LOCAL_PHP: ${{ matrix.php_versions }}-fpm
    services:
      mysql:
        image: mysql:5.7.27
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v2

        # Install PHP
      - name: Setup PHP
        # Using this repo
        uses: shivammathur/setup-php@v1
        # And these settings
        with:
          php-version: ${{ matrix.php_versions }} # Change the version to install with the matrix variables above.
          extension-csv: mbstring, intl #optional, setup extensions
          ini-values-csv: post_max_size=256M, short_open_tag=On #optional, setup php.ini configuration
          coverage: xdebug #optional, setup coverage driver
          pecl: false #optional, setup PECL

      # Check PHP is installed.
      # Weird Note - the next step 'composer install' fails if this PHP Check is not run.
      - name: Check PHP Version
        run: php -v

      # Install composer to use your autoloader
      - name: Composer install
        run: composer install --optimize-autoloader --prefer-dist

        # Install PHPUnit using the matrix variables above
      - name: Install PHPUnit
        run: composer global require "phpunit/phpunit"

        # Check listing of directory
        # Also a quick example of multi-commands and the $GITHUB_WORKSPACE variable.
      - name: list dir
        run: |
          ls -la
          ls $GITHUB_WORKSPACE
        # Run the WordPress PHPUnit install script.
        # This will install WordPress into /tmp/wordpress
        # It will create a wordpress_test database using the [root root] credentials
        # It will connect to the localhost (127.0.0.1) using the port 33306
        #
        # Note - use the external container port listed above in the mysql section.
        # Install the 'latest' version of WordPress too.
      - name: Install WP Tests
        run: bash bin/install-wp-tests.sh wordpress_test root '' 127.0.0.1:33306 latest

      - name: PHPUnit tests
        run: phpunit
