name: PHPUnit Tests
on:
  push:
    branches:
      - main
      - develop
      - feature/GP-182
  pull_request:

jobs:
  # Sets up WordPress for testing or development use.
  #
  # Performs the following steps:
  # - Cancels all previous workflow runs that have not completed.
  # - Checks out the repository.
  # - Checks out the WordPress Importer plugin (needed for the Core PHPUnit tests).
  # - Logs debug information about the runner container.
  # - Installs NodeJS 12 (todo: install the version of NPM specified in the `.nvmrc` file to support older branches)
  # - Sets up caching for NPM.
  # _ Installs NPM dependencies.
  # - Builds WordPress to run from the `build` directory.
  # - Creates a ZIP file of compiled WordPress
  # - Uploads ZIP file as an artifact.
  setup-wordpress:
    name: Setup WordPress
    runs-on: ubuntu-latest

    steps:
      - name: Cancel previous runs of this workflow
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Checkout the WordPress Importer plugin
        run: svn checkout -r 2387243 https://plugins.svn.wordpress.org/wordpress-importer/trunk/ tests/phpunit/data/plugins/wordpress-importer

      - name: Log debug information
        run: |
          npm --version
          node --version
          curl --version
          git --version
          svn --version
          php --version
          php -i
          locale -a

      - name: Install NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Cache NodeJS modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install Dependencies
        run: npm ci

      - name: Build WordPress
        run: npm run build

      - name: Create ZIP artifact
        uses: thedoctor0/zip-release@0.4.1
        with:
          filename: built-wp-${{ github.sha }}.zip
          exclusions: '/*node_modules/*'

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: built-wp-${{ github.sha }}
          path: built-wp-${{ github.sha }}.zip
          if-no-files-found: error

  test-php:
    name: ${{ matrix.php_versions }} on ${{ matrix.os }}
    needs: setup-wordpress
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        php_versions: [ 7.4, 7.3 ]
        os: [ ubuntu-latest ]
    env:
      LOCAL_PHP: ${{ matrix.php_versions }}-fpm

    steps:
      - name: Configure environment variables
        run: |
          echo "PHP_FPM_UID=$(id -u)" >> $GITHUB_ENV
          echo "PHP_FPM_GID=$(id -g)" >> $GITHUB_ENV

      - name: Download the built WordPress artifact
        uses: actions/download-artifact@v2
        with:
          name: built-wp-${{ github.sha }}

      - name: Unzip built artifact
        run: unzip built-wp-${{ github.sha }}.zip

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Set up Composer caching
        uses: actions/cache@v2
        env:
          cache-name: cache-composer-dependencies
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-suggest --no-progress --no-ansi --no-interaction
          echo "vendor/bin" >> $GITHUB_PATH

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit

      - name: Run tests as a multisite install
        run: WP_MULTISITE=1 vendor/bin/phpunit
